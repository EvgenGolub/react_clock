{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","intervalId","getOnlyTime","toUTCString","slice","this","setState","window","setInterval","newDate","console","info","prevProps","prevName","name","currentName","props","debug","clearInterval","className","React","Component","App","clockName","hasClock","timerId","getRandomName","value","now","toString","showClock","event","preventDefault","hideClock","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,WAAa,EALf,EAiCEC,YAAc,SAACH,GAAD,OAAgBA,EAAKI,cAAcC,OAAO,IAAK,IAjC/D,uDAOE,WAA2B,IAAD,OACxBC,KAAKC,SAAS,CAAEP,KAAM,IAAIC,OAE1BK,KAAKJ,WAAaM,OAAOC,aAAY,WACnC,IAAMC,EAAU,IAAIT,KAEpB,EAAKM,SAAS,CAAEP,KAAMU,IAEtBC,QAAQC,KAAK,EAAKT,YAAYO,MAC7B,OAhBP,gCAmBE,SAAmBG,GACjB,IAAMC,EAAWD,EAAUE,KACrBC,EAAcV,KAAKW,MAAMF,KAE3BC,IAAgBF,GAElBH,QAAQO,MAAR,uBAA8BJ,EAA9B,eAA6CE,MAzBnD,kCA6BE,WACER,OAAOW,cAAcb,KAAKJ,cA9B9B,oBAmCE,WACE,IAAQF,EAASM,KAAKP,MAAdC,KACAe,EAAST,KAAKW,MAAdF,KAER,OACE,sBAAKK,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGL,IAGF,YAED,sBAAMK,UAAU,cAAhB,SACGd,KAAKH,YAAYH,YAhD5B,GAA2BqB,IAAMC,WCGpBC,EAAb,4MACExB,MAAe,CACbyB,UAAW,UACXC,UAAU,GAHd,EAMEC,QAAU,EANZ,EAwBEC,cAAgB,WACd,IAAMC,EAAQ3B,KAAK4B,MAAMC,WAAWzB,OAAO,GAE3C,MAAM,SAAN,OAAgBuB,IA3BpB,EA8BEG,UAAY,SAACC,GACXA,EAAMC,iBAEN,EAAK1B,SAAS,CAAEkB,UAAU,KAjC9B,EAoCES,UAAY,SAACF,GACXA,EAAMC,iBAEN,EAAK1B,SAAS,CAAEkB,UAAU,KAvC9B,uDAQE,WAA2B,IAAD,OACxBnB,KAAKoB,QAAUlB,OAAOC,aAAY,WAChC,EAAKF,SAAS,CAAEiB,UAAW,EAAKG,oBAC/B,MAEHQ,SAASC,iBAAiB,cAAe9B,KAAK4B,WAC9CC,SAASC,iBAAiB,QAAS9B,KAAKyB,aAd5C,kCAiBE,WACEvB,OAAOW,cAAcb,KAAKoB,SAE1BS,SAASE,oBAAoB,cAAe/B,KAAK4B,WACjDC,SAASE,oBAAoB,QAAS/B,KAAKyB,aArB/C,oBA0CE,WACE,MAAgCzB,KAAKP,MAA7ByB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKL,UAAU,MAAf,UACE,6CAECK,GAAY,cAAC,EAAD,CAAOV,KAAMS,WAjDlC,GAAyBH,IAAMC,WCN/BgB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.bcbce166.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    date: new Date(),\n  };\n\n  intervalId = 0;\n\n  componentDidMount(): void {\n    this.setState({ date: new Date() });\n\n    this.intervalId = window.setInterval(() => {\n      const newDate = new Date();\n\n      this.setState({ date: newDate });\n      // eslint-disable-next-line no-console\n      console.info(this.getOnlyTime(newDate));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    const prevName = prevProps.name;\n    const currentName = this.props.name;\n\n    if (currentName !== prevName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevName} to ${currentName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalId);\n  }\n\n  getOnlyTime = (date: Date) => date.toUTCString().slice(-12, -4);\n\n  render() {\n    const { date } = this.state;\n    const { name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.getOnlyTime(date)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    clockName: 'Clock-0',\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount(): void {\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: this.getRandomName() });\n    }, 3300);\n\n    document.addEventListener('contextmenu', this.hideClock);\n    document.addEventListener('click', this.showClock);\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId);\n\n    document.removeEventListener('contextmenu', this.hideClock);\n    document.removeEventListener('click', this.showClock);\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  showClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: true });\n  };\n\n  hideClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}